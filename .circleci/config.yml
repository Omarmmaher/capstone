version: 2.1
  
orbs:
  aws-eks: circleci/aws-eks@1.0.3
  aws-ecr: circleci/aws-ecr@3.1.0
  kubernetes: circleci/kubernetes@0.3.0

jobs:
    run-lint:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - run:
            name: install dependencies
            command: |
              sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
              sudo chmod +x /bin/hadolint
        - run:
            name: Run Lint
            command: |
              hadolint Dockerfile

      
    build-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout

        - setup_remote_docker:
            version: 19.03.13

        - run:
            name: Build Docker Image
            command: |
              docker build -t kelanik8/capstone_project .

    push-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - setup_remote_docker:
            version: 19.03.13
        - run:
            name: Push Docker Image to Docker Hub
            command: |
              echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
              echo 'export IMAGE_NAME=capstone' >> $BASH_ENV

              docker build -t kelanik8/capstone .
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
              docker push kelanik8/capstone

    create-deployment:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            CapStone cluster
          type: string
      steps:
        - checkout
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
            install-kubectl: true
        - kubernetes/create-or-update-resource:
            resource-file-path: "deployments/deployment.yml"
            resource-name: "deployments/deployment.yml"
            get-rollout-status: true
            show-kubectl-command: true

workflows:
  default:
    jobs:
      - run-lint
      - build-docker-image
      - push-docker-image:
          requires:
            - "build-docker-image"
      - aws-eks/create-cluster:
          cluster-name: capstone-proj-deployment
      - create-deployment:
          cluster-name: capstone-proj-deployment
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: capstone-deployment
          resource-name: "deployments/deployment.yml"
          container-image-updates: "nginx=nginx:1.9.1"
          record: true
          requires:
            - create-deployment